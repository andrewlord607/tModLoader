--- src/Terraria/Terraria/GameContent/Drawing/TileDrawing.cs
+++ src/tModLoader/Terraria/GameContent/Drawing/TileDrawing.cs
@@ -9,6 +_,7 @@
 using Terraria.GameContent.Tile_Entities;
 using Terraria.Graphics.Capture;
 using Terraria.ID;
+using Terraria.ModLoader;
 using Terraria.ObjectData;
 using Terraria.UI;
 using Terraria.Utilities;
@@ -356,6 +_,9 @@
 						if (!TextureAssets.Tile[type].IsLoaded)
 							Main.instance.LoadTiles(type);
 
+						if (!TileLoader.PreDraw(j, i, type, Main.spriteBatch))
+							goto PostDraw;
+
 						switch (type) {
 							case 541:
 								if (!_shouldShowInvisibleBlocks)
@@ -482,6 +_,9 @@
 						}
 
 						DrawSingleTile(value, solidLayer, waterStyleOverride, unscaledPosition, vector, j, i);
+
+						PostDraw:
+						TileLoader.PostDraw(j, i, type, Main.spriteBatch);
 					}
 				}
 			}
@@ -547,6 +_,7 @@
 				return;
 
 			GetTileDrawData(tileX, tileY, drawData.tileCache, drawData.typeCache, ref drawData.tileFrameX, ref drawData.tileFrameY, out drawData.tileWidth, out drawData.tileHeight, out drawData.tileTop, out drawData.halfBrickHeight, out drawData.addFrX, out drawData.addFrY, out drawData.tileSpriteEffect, out drawData.glowTexture, out drawData.glowSourceRect, out drawData.glowColor);
+			
 			drawData.drawTexture = GetTileDrawTexture(drawData.tileCache, tileX, tileY);
 			Texture2D highlightTexture = null;
 			Rectangle empty = Rectangle.Empty;
@@ -608,6 +_,7 @@
 
 			Rectangle normalTileRect = new Rectangle(drawData.tileFrameX + drawData.addFrX, drawData.tileFrameY + drawData.addFrY, drawData.tileWidth, drawData.tileHeight - drawData.halfBrickHeight);
 			Vector2 vector = new Vector2((float)(tileX * 16 - (int)screenPosition.X) - ((float)drawData.tileWidth - 16f) / 2f, tileY * 16 - (int)screenPosition.Y + drawData.tileTop + drawData.halfBrickHeight) + screenOffset;
+			TileLoader.DrawEffects(tileX, tileY, drawData.typeCache, Main.spriteBatch, ref drawData.tileLight, ref _specialTilesCount);
 			if (drawData.tileLight.R < 1 && drawData.tileLight.G < 1 && drawData.tileLight.B < 1)
 				return;
 
@@ -4371,6 +_,9 @@
 						break;
 					}
 			}
+
+			TileLoader.SetDrawPositions(x, y, ref tileWidth, ref tileTop, ref tileHeight);
+			TileLoader.SetAnimationFrame(typeCache, x, y, ref addFrX, ref addFrY);
 		}
 
 		private bool IsWindBlocked(int x, int y) {
